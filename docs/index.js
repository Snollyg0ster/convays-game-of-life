"use strict";
(() => {
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __decorateClass = (decorators, target, key, kind) => {
    var result = kind > 1 ? void 0 : kind ? __getOwnPropDesc(target, key) : target;
    for (var i = decorators.length - 1, decorator; i >= 0; i--)
      if (decorator = decorators[i])
        result = (kind ? decorator(target, key, result) : decorator(result)) || result;
    if (kind && result)
      __defProp(target, key, result);
    return result;
  };

  // src/decorator.ts
  var Observer = class {
    observers = {};
    observe = (key, cb) => {
      const id = Symbol("id");
      if (this.observers[key]) {
        this.observers[key].set(id, cb);
      } else {
        this.observers[key] = /* @__PURE__ */ new Map([[id, cb]]);
      }
      return { key, id };
    };
    unsubscribe = ({ key, id }) => {
      this.observers[key]?.delete(id);
    };
    emit = (key, val) => {
      this.observers[key]?.forEach((cb) => cb(val, key));
    };
  };
  function observe(constructor) {
    return class Observed extends constructor {
      constructor(...args) {
        super(...args);
        const object = new constructor();
        Object.assign(object, new Observer());
        return new Proxy(object, {
          set(target, key, value) {
            target.emit(key, value);
            target[key] = value;
            return true;
          }
        });
      }
    };
  }

  // src/config.ts
  var Config = class {
    cellSize = 10;
    horCount = 120;
    verCount = 50;
    gameDeltaTime = 100;
    // 0.1s
    backgroundColor = "black";
    cellColor = "#ffffff";
    cursorColor = "#aa0000";
    gridColor = "#808080";
    drawGrid = true;
    gridWidth = 1;
    dencityOfRandomFill = 0.5;
    prevField = [];
    field;
    constructor(field) {
      this.field = field || this.initField;
    }
    get initField() {
      return Array.from(
        { length: this.verCount },
        () => new Array(this.horCount)
      );
    }
    get gameWidth() {
      const gridWidth = this.drawGrid ? this.gridWidth : 0;
      return (this.cellSize + gridWidth) * this.horCount;
    }
    get gameHeight() {
      const gridWidth = this.drawGrid ? this.gridWidth : 0;
      return (this.cellSize + gridWidth) * this.verCount;
    }
    resetField() {
      this.field = this.initField;
      this.prevField = this.initField;
    }
  };
  Config = __decorateClass([
    observe
  ], Config);
  var cfg = new Config();

  // src/consts.ts
  var START_TEXT = "\u0421\u0442\u0430\u0440\u0442 \u{1F680}";
  var STOP_TEXT = "\u0421\u0442\u043E\u043F \u26D4\uFE0F";
  var CLEAR_TEXT = "\u041E\u0447\u0438\u0441\u0442\u0438\u0442\u044C \u232B";
  var NEXT_FRAME_TEXT = "\u0414\u0430\u043B\u0435\u0435 \u23ED\uFE0F";
  var SPEED_TEXT = "\u0421\u043A\u043E\u0440\u043E\u0441\u0442\u044C";
  var EXAMPLE_TEXT = "\u041F\u0440\u0438\u043C\u0435\u0440 \u{1FA84}";
  var BACKGROUND_COLOR_TEXT = "\u0426\u0432\u0435\u0442 \u0444\u043E\u043D\u0430";
  var CELL_COLOR_TEXT = "\u0426\u0432\u0435\u0442 \u043A\u043B\u0435\u0442\u043E\u043A";
  var RANDOM_TEXT = "\u0421\u043B\u0443\u0447\u0430\u0439\u043D\u043E \u0437\u0430\u043F\u043E\u043B\u043D\u0438\u0442\u044C \u{1F3B2}";
  var DENCITY_TEXT = "\u041F\u043B\u043E\u0442\u043D\u043E\u0441\u0442\u044C \u0437\u0430\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u044F";
  var GRID_TEXT = "\u0420\u0438\u0441\u043E\u0432\u0430\u0442\u044C \u0441\u0435\u0442\u043A\u0443";

  // src/dom.ts
  var clearCtx = (ctx2) => ctx2 && ctx2.clearRect(0, 0, cfg.gameWidth, cfg.gameHeight);
  function drawGrid(ctx2) {
    for (let y = 1; y < cfg.verCount; y++) {
      const yPos = y * (cfg.cellSize + cfg.gridWidth) - cfg.gridWidth;
      const gameWidth = cfg.gameWidth;
      ctx2.beginPath();
      ctx2.strokeStyle = cfg.gridColor;
      ctx2.lineWidth = cfg.gridWidth;
      ctx2.moveTo(0, yPos);
      ctx2.lineTo(gameWidth, yPos);
      ctx2.stroke();
      ctx2.closePath();
    }
    for (let y = 1; y < cfg.horCount; y++) {
      const xPos = y * (cfg.cellSize + cfg.gridWidth) - cfg.gridWidth;
      const gameHeight = cfg.gameHeight;
      ctx2.beginPath();
      ctx2.strokeStyle = cfg.gridColor;
      ctx2.lineWidth = cfg.gridWidth;
      ctx2.moveTo(xPos, 0);
      ctx2.lineTo(xPos, gameHeight);
      ctx2.stroke();
      ctx2.closePath();
    }
  }
  function drawCells(ctx2, field, cursor) {
    if (!ctx2) {
      return;
    }
    clearCtx(ctx2);
    cfg.cellSize > 1 && cfg.drawGrid && drawGrid(ctx2);
    ctx2.fillStyle = cfg.cellColor;
    const gridWidth = cfg.drawGrid ? cfg.gridWidth : 0;
    for (let y = 0; y < field.length; y++) {
      const row = field[y];
      const yPos = y * (cfg.cellSize + gridWidth);
      for (let x = 0; x < row.length; x++) {
        const xPos = x * (cfg.cellSize + gridWidth);
        const cell = row[x];
        if (!cell) {
          continue;
        }
        ctx2.fillRect(xPos, yPos, cfg.cellSize, cfg.cellSize);
      }
    }
    if (cursor) {
      ctx2.fillStyle = cfg.cursorColor;
      ctx2.fillRect(cursor.x, cursor.y, cfg.cellSize, cfg.cellSize);
    }
  }
  var trackMouse = (e, ctx2, val) => {
    const gridWidth = cfg.drawGrid ? cfg.gridWidth : 0;
    const x = ~~(e.offsetX / (cfg.cellSize + gridWidth));
    const y = ~~(e.offsetY / (cfg.cellSize + gridWidth));
    if (y === cfg.verCount) {
      return;
    }
    cfg.field[y][x] = val === void 0 ? !cfg.field[y][x] : val;
    drawCells(ctx2, cfg.field);
  };

  // src/utils.ts
  function assertEventTarget(event, element) {
    if (event.target && event.target instanceof element) {
      return;
    }
    throw Error(`Target is not instance of ${element}`);
  }

  // src/elements.ts
  var createCanvas = () => {
    const canvas2 = document.createElement("canvas");
    const ctx2 = canvas2.getContext("2d");
    canvas2.classList.add("canvas");
    canvas2.width = cfg.gameWidth;
    canvas2.height = cfg.gameHeight;
    let mouseMoveCount = 0;
    const onMouseMove = (e) => {
      mouseMoveCount += 1;
      trackMouse(e, ctx2, true);
    };
    canvas2.addEventListener("mousedown", () => {
      canvas2.addEventListener("mousemove", onMouseMove);
    });
    canvas2.addEventListener("mouseup", (e) => {
      canvas2.removeEventListener("mousemove", onMouseMove);
      !mouseMoveCount && trackMouse(e, ctx2);
      mouseMoveCount = 0;
    });
    const updateCanvasStyle2 = () => {
      canvas2.height = cfg.gameHeight;
      canvas2.width = cfg.gameWidth;
      canvas2.setAttribute(
        "style",
        `width: ${cfg.gameWidth}px;
        height: ${cfg.gameHeight}px;
        background: ${cfg.backgroundColor};`
      );
    };
    updateCanvasStyle2();
    return { canvas: canvas2, ctx: ctx2, updateCanvasStyle: updateCanvasStyle2 };
  };
  var createGameButton = (cb, isRuning = false) => {
    const gameButton2 = document.createElement("button");
    gameButton2.textContent = isRuning ? STOP_TEXT : START_TEXT;
    let stopGame;
    gameButton2.onclick = () => {
      isRuning = !isRuning;
      gameButton2.textContent = isRuning ? STOP_TEXT : START_TEXT;
      if (isRuning) {
        stopGame = cb();
      } else {
        stopGame?.();
      }
    };
    return gameButton2;
  };
  var createCbButton = (title, cb) => {
    const button = document.createElement("button");
    button.textContent = title;
    button.onclick = cb;
    return button;
  };
  var createGameSpeedSlider = (min = 1, max = 1e3, normal = 100) => {
    const cont = document.createElement("div");
    const label = document.createElement("label");
    cont.classList.add("col");
    label.textContent = `${SPEED_TEXT} ${(cfg.gameDeltaTime / 1e3).toFixed(2)}`;
    label.setAttribute("for", "gameSpeed");
    const input = document.createElement("input");
    input.setAttribute("value", `${cfg.gameDeltaTime}`);
    input.setAttribute("min", `${min}`);
    input.setAttribute("max", `${max}`);
    input.type = "range";
    cont.append(label, input);
    input.oninput = (e) => {
      assertEventTarget(e, HTMLInputElement);
      const speed = +e.target.value;
      cfg.gameDeltaTime = speed;
      const precision = speed > 100 ? 1 : speed < 10 ? 3 : 2;
      label.textContent = `${SPEED_TEXT} ${(speed / 1e3).toFixed(precision)}`;
    };
    return cont;
  };
  var createNumberInput = (title, field, cb, props = {}) => {
    const { min = 1, max = 1e3, float = false } = props;
    const cont = document.createElement("div");
    const label = document.createElement("label");
    cont.classList.add("col");
    const input = document.createElement("input");
    input.setAttribute("value", `${cfg[field]}`);
    input.type = "number";
    cont.append(label, input);
    cfg.observe(field, (val) => {
      input.value = `${val}`;
    });
    input.oninput = (e) => {
      assertEventTarget(e, HTMLInputElement);
      const num = float ? parseFloat(e.target.value) : ~~parseFloat(e.target.value);
      const val = num < min ? min : num > max ? max : num;
      cfg[field] = val;
      cb?.(val);
    };
    return cont;
  };
  var createColorInput = (title, field, cb) => {
    const cont = document.createElement("div");
    const label = document.createElement("label");
    label.textContent = title;
    cont.classList.add("col");
    const input = document.createElement("input");
    input.setAttribute("value", `${cfg[field]}`);
    input.type = "color";
    cont.append(label, input);
    input.oninput = (e) => {
      assertEventTarget(e, HTMLInputElement);
      const color = e.target.value;
      cfg[field] = color;
      cb?.(color);
    };
    return cont;
  };
  var createCheckbox = (title, field, cb) => {
    const cont = document.createElement("div");
    const label = document.createElement("label");
    label.textContent = title;
    const input = document.createElement("input");
    cfg[field] && input.setAttribute("checked", "");
    input.type = "checkbox";
    cont.append(label, input);
    input.onclick = () => {
      cfg[field] = !cfg[field];
      cb?.();
    };
    return cont;
  };

  // src/defaults.ts
  var preloadedField = [
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      true,
      true,
      true,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ],
    [
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false,
      false
    ]
  ];

  // src/game.ts
  var { ctx, canvas, updateCanvasStyle } = createCanvas();
  var getIndex = (len, pos) => pos > len ? 0 : pos < 0 ? len : pos;
  var getNeighbours = (field, x, y) => {
    let neighbours = field[y][x] ? -1 : 0;
    const bottom = y + 2, right = x + 2, fieldLen = field.length - 1;
    for (let i = y - 1; i < bottom; i++) {
      const row = field[getIndex(fieldLen, i)];
      const rowLen = row.length - 1;
      for (let j = x - 1; j < right; j++) {
        const neighbour = row[getIndex(rowLen, j)];
        neighbours += neighbour ? 1 : 0;
      }
    }
    return neighbours;
  };
  var game = (field) => {
    const newField = cfg.initField;
    cfg.prevField = field;
    for (let y = 0; y < field.length; y++) {
      const row = newField[y];
      for (let x = 0; x < row.length; x++) {
        const neighbours = getNeighbours(cfg.prevField, x, y);
        if (!cfg.prevField[y][x]) {
          if (neighbours === 3) {
            row[x] = true;
          }
        } else {
          if (neighbours > 3 || neighbours < 2) {
            row[x] = false;
          } else {
            row[x] = true;
          }
        }
      }
    }
    return newField;
  };
  var nextFrame = () => {
    cfg.field = game(cfg.field);
    drawCells(ctx, cfg.field);
  };
  var startGame = () => {
    let run = true;
    const loop = () => {
      setTimeout(() => {
        if (!run) {
          return;
        }
        nextFrame();
        loop();
      }, cfg.gameDeltaTime);
    };
    loop();
    return () => {
      run = false;
    };
  };

  // src/layout.ts
  var buttonCont = document.createElement("div");
  var root = document.getElementById("root");
  var gameButton = createGameButton(startGame);
  var nextFrameButton = createCbButton(NEXT_FRAME_TEXT, nextFrame);
  var clearButton = createCbButton(CLEAR_TEXT, () => {
    cfg.resetField();
    drawCells(ctx, cfg.field);
  });
  var gameSpeed = createGameSpeedSlider();
  var verSizeInput = createNumberInput(
    "\u0420\u0430\u0437\u043C\u0435\u0440 \u043F\u043E \u0432\u0435\u0440\u0442\u0438\u043A\u0430\u043B\u0438",
    "verCount",
    () => {
      cfg.resetField();
      updateCanvasStyle();
      drawCells(ctx, cfg.field);
    }
  );
  var horSizeInput = createNumberInput(
    "\u0420\u0430\u0437\u043C\u0435\u0440 \u043F\u043E \u0433\u043E\u0440\u0438\u0437\u043E\u043D\u0442\u0430\u043B\u0438",
    "horCount",
    () => {
      cfg.resetField();
      updateCanvasStyle();
      drawCells(ctx, cfg.field);
    }
  );
  var cellSizeInput = createNumberInput(
    "\u0420\u0430\u0437\u043C\u0435\u0440 \u043A\u043B\u0435\u0442\u043A\u0438 (px)",
    "cellSize",
    () => {
      updateCanvasStyle();
      drawCells(ctx, cfg.field);
    }
  );
  var drawGridButton = createCheckbox(GRID_TEXT, "drawGrid", () => {
    updateCanvasStyle();
    drawCells(ctx, cfg.field);
  });
  var logFunction = () => console.log(cfg.field);
  var logButton = createCbButton("log", logFunction);
  var drawExampleField = () => {
    cfg.resetField();
    cfg.verCount = 50;
    cfg.horCount = 50;
    cfg.cellSize = 10;
    cfg.gameDeltaTime = 50;
    cfg.field = preloadedField;
    updateCanvasStyle();
    drawCells(ctx, cfg.field);
  };
  var exampleButton = createCbButton(EXAMPLE_TEXT, drawExampleField);
  var backgroundColor = createColorInput(
    BACKGROUND_COLOR_TEXT,
    "backgroundColor",
    updateCanvasStyle
  );
  var cellColor = createColorInput(
    CELL_COLOR_TEXT,
    "cellColor",
    () => drawCells(ctx, cfg.field)
  );
  var gridColor = createColorInput(
    CELL_COLOR_TEXT,
    "gridColor",
    () => drawCells(ctx, cfg.field)
  );
  var colorCont = document.createElement("div");
  colorCont.classList.add("row");
  colorCont.append(backgroundColor, cellColor, gridColor);
  var randomlyFillField = () => {
    const dencity = cfg.dencityOfRandomFill;
    const randomField = cfg.initField;
    cfg.field = randomField.map((row) => row.fill(false)).map((row) => row.map(() => Math.random() < dencity));
    drawCells(ctx, cfg.field);
  };
  var randomButton = createCbButton(RANDOM_TEXT, randomlyFillField);
  var randomDencityButton = createNumberInput(
    DENCITY_TEXT,
    "dencityOfRandomFill",
    void 0,
    {
      min: 0.01,
      max: 1,
      float: true
    }
  );
  var randomFillCont = document.createElement("div");
  randomFillCont.classList.add("row");
  randomFillCont.append(randomButton, randomDencityButton);
  buttonCont.classList.add("buttons");
  buttonCont.append(
    gameButton,
    nextFrameButton,
    clearButton,
    gameSpeed,
    verSizeInput,
    horSizeInput,
    cellSizeInput,
    drawGridButton,
    colorCont,
    randomFillCont,
    logButton,
    exampleButton
  );

  // src/index.ts
  root && root.append(canvas, buttonCont);
  drawCells(ctx, cfg.field);
})();
